name: DIY

on:
  push:
    branches:
      - dev
  workflow_dispatch: {}
  schedule:
    - cron: "0 1 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Sync upstream changes
      id: sync
      uses: aormsby/Fork-Sync-With-Upstream-action@v3.4.1
      with:
        target_sync_branch: main
        # REQUIRED 'target_repo_token' exactly like this!
        target_repo_token: ${{ secrets.GITHUB_TOKEN }}
        upstream_sync_branch: main
        upstream_sync_repo: ccfddl/ccf-deadlines
    - name: New commits found
      if: steps.sync.outputs.has_new_commits == 'true'
      run: echo "New commits were found to sync."
    - name: No new commits
      if: steps.sync.outputs.has_new_commits == 'false'
      run: echo "There were no new commits."
    - name: Show value of 'has_new_commits'
      run: echo ${{ steps.sync.outputs.has_new_commits }}
      
    - name: Setup Node.js environment
      uses: actions/setup-node@main
      with:
        node-version: '15.x'
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install PyYAML jsonschema icalendar xlin
    - name: Validate yml files
      run: |
        python ./scripts/validate
    - name: Assemble yml files
      run: |
        mkdir -p public/conference && cd public/conference
        awk 1 `find ../../conference -name '*.yml' -not -path '**/types.yml'` > allconf.yml
        awk 1 `find ../../accept_rates -name '*.yml'` > allacc.yml
        cp ../../conference/types.yml .
        cd ../..
    - name: Generate iCal files
      run: |
        python cli/ccfddl/convert_to_ical_diy.py --conf ${{ vars.CONFERENCES_NAME}}
        # generate deadlines_diy_en.ics

    - name: Checkout or create release branch
      run: |
        # Stash any untracked files to avoid conflicts
        git add .
        git stash --include-untracked || true
        
        # Check if release branch exists remotely
        if git ls-remote --heads origin release | grep -q release; then
          # Branch exists, just checkout
          git checkout release
          # Apply stashed changes if any
          git stash pop || true
        else
          # Create new empty orphan branch
          git checkout --orphan release
          git rm -rf .
          # Apply stashed changes if any
          git stash pop || true
        fi

    - name: Update iCal file
      run: |
        # Copy the generated iCal file
        git add *.ics

    - name: Commit and Push
      run: |
        git diff-index --quiet HEAD || git commit -m "Update deadlines_diy_en.ics"
        git push origin release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
